{"version":3,"sources":["history.js","Auth/Auth.js","componentes/Login.js","componentes/Registro.js","componentes/Articulo.js","componentes/Articulos.js","componentes/ArticuloDetalle.js","componentes/AltaCategoria.js","componentes/NavBar.js","componentes/Tree.js","componentes/routes.js","App.js","serviceWorker.js","index.js"],"names":["createHistory","Auth","Object","classCallCheck","this","logout","bind","isAuthenticated","getAccessToken","accessToken","localStorage","getItem","Error","token","expiresAt","JSON","stringify","Date","getTime","setItem","history","replace","removeItem","parse","Login","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","username","password","login","assertThisInitialized","handleChange","e","_e$target","target","name","value","setState","defineProperty","_this2","fetch","method","body","headers","Accept","Content-Type","then","res","json","data","status","window","M","toast","html","auth","setSession","push","catch","error","console","log","preventDefault","react_default","a","createElement","className","onSubmit","onChange","type","placeholder","Link","to","Component","Registro","nombre","apellido","fechaNac","correo","tipo","categoria","nombreEmpresa","linkEmpresa","addUser","required","Articulo","_props$informacion","informacion","imagen","precio","id","src","concat","alt","Articulos","articulos","queryAPI","keys","map","articulo","componentes_Articulo","key","ArticuloDetalle","getArticulo","idArticulo","location","pathname","AltaCategoria","idPadre","categorias","addCategoria","getCategorias","_this3","message","cat","_id","NavBar","cerrarSesion","resultado","onClick","Tree","deni_react_treeview_default","url","showRoot","routes","Router","componentes_NavBar","Route","path","render","componentes_Login","assign","component","exact","componentes_ArticuloDetalle","App","Fragment","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f7fd7b9e.chunk.js","sourcesContent":["import createHistory from 'history/createBrowserHistory'\r\n\r\nexport default createHistory()\r\n","import history from '../history';\r\n\r\nexport default class Auth {\r\n  \r\n  constructor() {\r\n    this.logout = this.logout.bind(this);\r\n    this.isAuthenticated = this.isAuthenticated.bind(this);\r\n    this.getAccessToken = this.getAccessToken.bind(this);\r\n  }\r\n\r\n  getAccessToken() {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    if(!accessToken) {\r\n      return new Error('Hubo un error al generar el token');\r\n    }\r\n    return accessToken;\r\n  }\r\n\r\n  setSession(token) {\r\n    // Set the time that the access token will expire at\r\n    let expiresAt = JSON.stringify((5 * 60 * 1000) + new Date().getTime());\r\n    localStorage.setItem('access_token', token);\r\n    //localStorage.setItem('id_token', authResult.idToken);\r\n    localStorage.setItem('expires_at', expiresAt);\r\n    // navigate to the home route\r\n    history.replace('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear access token and ID token from local storage\r\n    localStorage.removeItem('access_token');\r\n    //localStorage.removeItem('id_token');\r\n    localStorage.removeItem('expires_at');\r\n    // navigate to the home route\r\n    history.replace('/');\r\n  }\r\n\r\n  isAuthenticated() {\r\n    // Check whether the current time is past the \r\n    // access token's expiry time\r\n    let expiresAt = JSON.parse(localStorage.getItem('expires_at'));\r\n    return new Date().getTime() < expiresAt;\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Login extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        };\r\n        this.login = this.login.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e){\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    login(e){\r\n        fetch('http://localhost:5000/api/user/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify(this.state),\r\n            headers:{\r\n                'Accept': 'application/jason',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.status) {\r\n                window.M.toast({html: data.status});\r\n            } else {\r\n                this.props.auth.setSession(data.token);\r\n                this.props.history.push(\"/\");\r\n            }\r\n        })\r\n        .catch(error => console.log(error));\r\n        e.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s5\">\r\n                        <h1>Bienvenidos!</h1>\r\n                        <form onSubmit={this.login}>\r\n                            <input name=\"username\" value={this.state.username} onChange={this.handleChange} type=\"text\" placeholder=\"username\" />\r\n                            <input name=\"password\" value={this.state.password} onChange={this.handleChange} type=\"password\" placeholder=\"password\" />\r\n\r\n                            <button type=\"submit\" className=\"btn light-blue darken-4\">Iniciar</button>\r\n                            <Link to={'/register'} className=\"btn light-blue darken-4 right\">Registrarse</Link>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Registro extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            nombre: '',\r\n            apellido: '',\r\n            fechaNac: '',\r\n            correo: '',\r\n            tipo: '',\r\n            categoria: '',\r\n            nombreEmpresa: '',\r\n            linkEmpresa: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addUser = this.addUser.bind(this);\r\n    }\r\n\r\n    handleChange(e){\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    addUser(e){\r\n        fetch('http://localhost:5000/api/user/register', {\r\n            method: 'POST',\r\n            body: JSON.stringify(this.state),\r\n            headers:{\r\n                'Accept': 'application/jason',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status){\r\n                window.M.toast({html: data.status});\r\n            }\r\n            else{\r\n                window.M.toast({html: 'Usuario creado'});   \r\n                this.props.history.push(\"/login\");\r\n            }\r\n        })\r\n        .catch(error => console.log(error));\r\n        e.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s5\">\r\n                        <h1>Registro</h1>\r\n                        <form onSubmit={this.addUser}>\r\n                            <select name=\"tipo\" value={this.state.tipo} onChange={this.handleChange} className=\"browser-default\">\r\n                                <option value=\"\">Seleccione tipo</option>\r\n                                <option value=\"Cliente\">Cliente</option>\r\n                                <option value=\"Proveedor\">Proveedor</option>\r\n                            </select>\r\n                            <input name=\"username\" value={this.state.username} onChange={this.handleChange} type=\"text\" placeholder=\"Nick\" required />\r\n                            <input name=\"password\" value={this.state.password} onChange={this.handleChange} type=\"password\" placeholder=\"Contraseña\" required/>\r\n                            <input name=\"nombre\" value={this.state.nombre} onChange={this.handleChange} type=\"text\" placeholder=\"Nombre\" required />\r\n                            <input name=\"apellido\" value={this.state.apellido} onChange={this.handleChange} type=\"text\" placeholder=\"Apellido\" required />\r\n                            <input name=\"fechaNac\" value={this.state.fechaNac} onChange={this.handleChange} type=\"date\" required />\r\n                            <input name=\"correo\" value={this.state.correo} onChange={this.handleChange} type=\"text\" placeholder=\"Correo electrónico\" required />\r\n                            <select name=\"categoria\" value={this.state.categoria} onChange={this.handleChange} className=\"browser-default\">\r\n                                <option value=\"\">Seleccione categoría</option>\r\n                                <option value=\"Free\">Free</option>\r\n                                <option value=\"Silver\">Silver</option>\r\n                                <option value=\"Gold\">Gold</option>\r\n                            </select>\r\n                            <input name=\"nombreEmpresa\" value={this.state.nombreEmpresa} onChange={this.handleChange} type=\"text\" placeholder=\"Nombre de la Empresa\" />\r\n                            <input name=\"linkEmpresa\" value={this.state.linkEmpresa} onChange={this.handleChange} type=\"text\" placeholder=\"Link de la Empresa\" />\r\n\r\n                            <button type=\"submit\" className=\"btn light-blue darken-4\">Crear</button>\r\n                            <Link to={`/`} className=\"btn light-blue darken-4 right\" >Inicio</Link>\r\n                        </form>\r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Registro;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Articulo = (props) => {\r\n    const {imagen, nombre, precio, id} = props.informacion;\r\n    return (\r\n        <li>\r\n            <img src={`img/${imagen}.png`} alt={nombre} />\r\n            <p>{nombre} <span> $ {precio}</span></p>\r\n            <Link to={`/articulo/${id}`} className=\"btn\">Más Información</Link>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Articulo;","import React, { Component } from 'react';\r\nimport Articulo from './Articulo';\r\n\r\nclass Articulos extends Component {\r\n\r\n    state = {\r\n        articulos: []\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.queryAPI();\r\n    }\r\n\r\n    queryAPI = () => {\r\n        //const {getAccessToken} = this.props.auth;\r\n        //const headers = {'Authorization': `Bearer ${getAccessToken()}`};\r\n        const url = 'http://localhost:5000/articulos';\r\n\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({articulos: data})\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"center\">\r\n                <h2>Nuestros Articulos</h2>\r\n                <ul>\r\n                    {Object.keys(this.state.articulos).map(articulo => (\r\n                        <Articulo\r\n                            informacion={this.state.articulos[articulo]}\r\n                            key={articulo}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Articulos;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass ArticuloDetalle extends Component {\r\n\r\n    state = {\r\n        articulo: ''\r\n    }\r\n\r\n    componentWillMount(){\r\n        //this.getArticulo();\r\n    }\r\n\r\n    getArticulo = () => {\r\n        fetch('http://localhost:5000')\r\n            .then(res => res.json())\r\n            \r\n    }\r\n\r\n    render() {\r\n        //if(!props.articulo) return null;\r\n        const {isAuthenticated} = this.props.auth;\r\n        const idArticulo = this.props.location.pathname.replace('/articulo/', '');\r\n\r\n        return (\r\n            <div>\r\n                { isAuthenticated() && (\r\n                    <h3>Detalles del articulo id: {idArticulo}</h3>\r\n                )}\r\n                \r\n                { !isAuthenticated() && (\r\n                    <div>\r\n                        <p>Para ver el contenido debes estar logueado</p>\r\n                        <Link to=\"/login\">Iniciar Sesión</Link>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ArticuloDetalle;","import React, { Component } from 'react';\r\n\r\nclass AltaCategoria extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            nombre:'',\r\n            idPadre:'',\r\n            categorias:[]\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addCategoria = this.addCategoria.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.getCategorias();\r\n\r\n    }\r\n\r\n    handleChange(e){\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    getCategorias(){\r\n        fetch('http://localhost:5000/api/categoria/')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({categorias: data});\r\n            })\r\n    }\r\n\r\n    addCategoria(e){\r\n        fetch('http://localhost:5000/api/categoria/', {\r\n            method: 'POST',\r\n            body: JSON.stringify(this.state),\r\n            headers:{\r\n                'Accept': 'application/jason',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.message){\r\n                window.M.toast({html: data.message}); \r\n            }\r\n            else{\r\n                window.M.toast({html: 'Categoria creada'});\r\n                this.setState({nombre:'', categorias: []});\r\n                this.getCategorias();\r\n            }\r\n        })\r\n        .catch(error => console.log(error));\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s5\">\r\n                        <h4>Alta categoria</h4>\r\n                        <form onSubmit={this.addCategoria}>\r\n                            <select name=\"idPadre\" value={this.state.tipo} onChange={this.handleChange} className=\"browser-default\">\r\n                                <option value=\"\">Seleccione padre</option>\r\n                                {\r\n                                    this.state.categorias.map(cat => {\r\n                                        return(\r\n                                            <option key={cat._id} value={cat._id}>{cat.nombre}</option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </select>\r\n                            <input name=\"nombre\" value={this.state.nombre} onChange={this.handleChange} type=\"text\" placeholder=\"Nombre\" required />\r\n                            \r\n                            <button type=\"submit\" className=\"btn light-blue darken-4\">Crear</button>\r\n                        </form>\r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AltaCategoria;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass NavBar extends Component {\r\n\r\n    cerrarSesion = () => {\r\n        this.props.auth.logout();\r\n    }\r\n\r\n    render(){\r\n        const {isAuthenticated} = this.props.auth\r\n        let resultado;\r\n        if (isAuthenticated()) {\r\n            resultado = <a className=\"btn\" onClick={this.cerrarSesion}>Cerrar Sesión</a>\r\n        }else{\r\n            resultado = <div>\r\n                <Link to={'/login'} className=\"waves-effect waves-light btn\">Iniciar sesión</Link>\r\n                <Link to={'/registro'} className=\"waves-effect waves-light btn\">Registrarse</Link>\r\n            </div>\r\n        }\r\n        return (\r\n            <nav className=\"nav-wrapper\">\r\n                <div className=\"left hide-on-med-and-down\">\r\n                    <Link to={'/altaCategoria'} className=\"waves-effect waves-light btn\" >Alta Categoría</Link>\r\n                </div>\r\n                <ul className=\"right hide-on-med-and-down\">\r\n                    <Link to={'/'} className=\"brand-logo center\">Logo</Link>\r\n                    {resultado}\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, {Component} from 'react';\r\nimport TreeView from 'deni-react-treeview';\r\n\r\nclass Tree extends Component {\r\n\r\n\r\n    render(){\r\n        return(\r\n            //<TreeView url=\"https://denifakedata.herokuapp.com/tree/countries \"/>\r\n            <TreeView url=\"http://localhost:5000/articulos  \" showRoot={true} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tree;","import React from 'react';\r\nimport { Route, Router } from 'react-router-dom';\r\n\r\n// Auth0\r\nimport Auth from '../Auth/Auth';\r\nimport history from '../history';\r\n\r\n// Componentes Propios\r\nimport Login from './Login';\r\nimport Registro from './Registro';\r\n//import Error from './Error';\r\nimport Articulos from './Articulos';\r\nimport ArticuloDetalle from './ArticuloDetalle';\r\nimport AltaCategoria from './AltaCategoria';\r\nimport NavBar from './NavBar';\r\nimport Tree from './Tree';\r\n\r\nconst auth = new Auth();\r\n\r\n/*const handleAuthentication = ({location}) => {\r\n  if (/access_token|id_token|error/.test(location.hash)) {\r\n    auth.handleAuthentication();\r\n  }\r\n}*/\r\n\r\nexport const makeMainRoutes = () => {\r\n    return (\r\n        <Router history={history}>\r\n            <div>\r\n                <NavBar auth={auth} />\r\n\r\n                <Route path=\"/login\" render={(props) => (\r\n                    <Login\r\n                        auth={auth} {...props}\r\n                    />\r\n                )} />\r\n                \r\n                <Route path=\"/registro\" component={Registro} />\r\n                <Route exact path=\"/\" component={Articulos} />\r\n                <Route path=\"/altaCategoria\" component={AltaCategoria} />\r\n\r\n                <Route exact path=\"/articulo/:articuloId\" render={(props) => (\r\n                    <ArticuloDetalle\r\n                        auth={auth} {...props}\r\n                    />\r\n                ) } />\r\n\r\n                <Route path=\"/tree\" component={Tree}/>\r\n\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport {makeMainRoutes} from './componentes/routes';\r\n\r\nconst routes = makeMainRoutes();\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {routes}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}